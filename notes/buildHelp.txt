In order to compile executable for test do the following:

prerequisites for building this code are gcc, cmake, hdf5, and mpi.
Below are instructions on how to build this code on my macBook pro
and on quartz.llnl.gov


////////////
///
///     macBook prerequisites instructions:
///
///

I think I installed gcc and cmake using instructions from the book
"Modern C++ Programming with Test-Driven Development". For mpi I 
am using openmpi. See ://eothred.wordpress.com/2010/02/25/hello-world-
cmakeopenmpi/PI_Finalize ();

For setting up hdf5 see the instructions below.
The rest of the instructions (including hdf5) are same as Quartz
instructions given below.


////////////
///
///     Quartz build notes/instructions:
///
///

Fortunately, gcc, cmake and mpi are already setup on quartz. So nothing
needs to be done for these.

OLD HDF5 NOTES:
hdf5 is also on quartz, but I need it to be configured with 
--ennable-cxx and I'm not sure if that is a default configuration 
for hdf5 on quartz. So I just downloaded the .tar file and used the 
instructions below for configuring and making the hdf5 libraries. 
The path to these libraries needs to be set as the HDF5_HOME
environment variable in ./src/CMakeLists.txt.

i.e 
set(ENV{HDF5_HOME} "/g/g19/angus1/MHDwithMPI/HDF5/hdf5-1.10.0-patch1/hdf5")

NEW HDF5 NOTES: 
on quartz, do "module load hdf5-serial". Then do "printenv | grep "HDF5"", which will show you the path set by module load. Copy this path into the CMakeLists.txt file
for the path to hdf5 libraires. Note that there is incompatibility with hdf5-parallel
and --enable-cxx. But not using parallel hdf5 options anyway.

That is it for the prerequisites. 
The rest of the instructions for building the code and running
a module are given below (also in READ_ME file in ./physicsMods folder)

Go into one of the modules in the physicsMods folder and do the following
1) Set the environment variables for the module. I have these preset in each
module in ./physicsMods in the file called sourceMe - "source sourceMe".
2) build the code - "cmake ../../src". This makes the executable "mhd"
3) run a test with 4 procs - "srun -n 4 -p pdebug -t 00:01:00 ./mhd >> log.txt &
There should be a log.txt file and 4 outputN.h5 files, where N=0,1,2,3

Note - When copying one of the modules to a different location to perform
a study, dont forget to change the PHYS_HOME enviroment variable in the
sourceMe file to the current working directory.

The output files can be looked at using the matlab scrips in the
./postProcessingScripts directory.

///
///
////////////

Configuring and making hdf5 libraries:

I installed hdf5 with cxx wrapper by unzipping the source obtained 
from www.hdfgroup.org/HDF5/release/obtainsrc.html and following the 
instructions in hdf5-1.8.16/release_docs/INSTALL
1) tar -xzvf hdf5-1.10.0-patch1.tar 
2) cd hdf5-1.10.0-patch1
3) ./configure --enable-cxx
4) make
5) make check
6) make install
7) make check-install  
 
